import{useRef as b,useEffect as L}from"react";import{Keys as v}from"../components/keyboard.js";import{focusElement as o,focusIn as H,Focus as T,FocusResult as R}from"../utils/focus-management.js";import{useEventListener as d}from"./use-event-listener.js";import{useIsMounted as i}from"./use-is-mounted.js";import{useOwnerDocument as O}from"./use-owner.js";var j=(r=>(r[r.None=1]="None",r[r.InitialFocus=2]="InitialFocus",r[r.TabLock=4]="TabLock",r[r.FocusLock=8]="FocusLock",r[r.RestoreFocus=16]="RestoreFocus",r[r.All=30]="All",r))(j||{});function B(u,f=30,{initialFocus:t,containers:s}={}){let m=b(null),c=b(null),r=i(),M=Boolean(f&16),a=Boolean(f&2),e=O(u);return L(()=>{!M||m.current||(m.current=e==null?void 0:e.activeElement)},[M,e]),L(()=>{if(!!M)return()=>{o(m.current),m.current=null}},[M]),L(()=>{if(!a)return;let l=u.current;if(!l)return;let n=e==null?void 0:e.activeElement;if(t!=null&&t.current){if((t==null?void 0:t.current)===n){c.current=n;return}}else if(l.contains(n)){c.current=n;return}t!=null&&t.current?o(t.current):H(l,T.First)===R.Error&&console.warn("There are no focusable elements inside the <FocusTrap />"),c.current=e==null?void 0:e.activeElement},[u,t,a,e]),d(e==null?void 0:e.defaultView,"keydown",l=>{!(f&4)||!u.current||l.key===v.Tab&&(l.preventDefault(),H(u.current,(l.shiftKey?T.Previous:T.Next)|T.WrapAround)===R.Success&&(c.current=e==null?void 0:e.activeElement))}),d(e==null?void 0:e.defaultView,"focus",l=>{if(!(f&8))return;let n=new Set(s==null?void 0:s.current);if(n.add(u),!n.size)return;let p=c.current;if(!p||!r.current)return;let E=l.target;E&&E instanceof HTMLElement?k(n,E)?(c.current=E,o(E)):(l.preventDefault(),l.stopPropagation(),o(p)):o(c.current)},!0),m}function k(u,f){var t;for(let s of u)if((t=s.current)!=null&&t.contains(f))return!0;return!1}export{j as Features,B as useFocusTrap};
